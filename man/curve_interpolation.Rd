% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/curve_interpolation.R
\name{curve_interpolation}
\alias{curve_interpolation}
\title{Interpolates of growth curves along reference centiles}
\usage{
curve_interpolation(
  data,
  xname = "x",
  yname = "y",
  xout = numeric(0),
  refcode = NULL,
  rule = 2L
)
}
\arguments{
\item{data}{A data frame in long format, with columns for person
number (named \code{id}), the x and y variables.}

\item{xname}{Name of the variable on the horizontal axis.}

\item{yname}{Name of the variable on the vertical axis.}

\item{xout}{A vector of values for the horizontal axis in the scale
of the variable \code{xname}. Only \code{xout} points within the
data range of \code{xname} are interpolated.}

\item{refcode}{The name of reference needed to calculate the Z-score
scores and the back-transformation to measured scores. There can only
be one reference.}

\item{rule}{The \code{rule} argument passed down to \code{approx}. The
default here is \code{rule = 2L}, so any extrapolations beyond the
ranges of the reference take the closest value (min or max).}
}
\value{
A \code{tibble} with five columns: \code{id}, xname, yname,
zname and \code{obs}. The \code{obs} variables signals whether
the point is observed or not.
}
\description{
By convention, we connect the points of a growth curve by
straight lines. This is OK when ages are relatively close
together. However, for ages that are more apart, the straight
line gives an ugly representation that doesn't follow the real
growth during the interval.
}
\details{
The \code{curve_interpolation()} function provides a solution
for this. It defines a number of additional points (specified
through the \code{xout} argument), and calculates the linear
interpolation between these points in the Z-scores metric. After
that, the procedure transforms back the interpolated Z-scores
to the original scale, so the curve points follow the curvy
centiles.
}
\examples{
data <- data.frame(
  id = c(1, 1, 1, 2, 3, 3, 3),
  age = c(0, 0.2, 1.2, 0.5, 0.1, 1, 1.3),
  hgt = c(52, 60, 78, 69, 62, 78, 82)
)
refcode <- "nl_1997_hgt_male_nl"
xout <- seq(0, 3, 0.2)
int <- curve_interpolation(data,
  xname = "age", yname = "hgt",
  xout = xout, refcode = refcode
)
int
}
\seealso{
[centile::y2z()], [centile::z2y()]
}
\author{
Stef van Buuren, 2021
}
